(undo-tree-save-format-version . 1)
"8812e2d0ee1d85c401a0e86b6d7f263550a6df55"
[nil nil nil nil (25342 55391 897504 100000) 0 nil]
([nil nil ((1553 . 1558) (#("i" 0 1 (fontified t)) . -1553) (undo-tree-id5 . -1) 1554 (1541 . 1554) (t 25341 13895 958339 400000)) nil (25342 55391 897501 500000) 0 nil])
([nil nil ((1034 . 1035) (1032 . 1034) (#("d" 0 1 (fontified t)) . -1032) (undo-tree-id0 . -1) 1033 (1032 . 1033) (#("d" 0 1 (fontified t)) . -1032) (undo-tree-id1 . -1) (#("-" 0 1 (fontified t)) . -1033) (undo-tree-id2 . -1) 1034 (1031 . 1034) (1010 . 1031) (#("m" 0 1 (fontified t)) . -1010) (undo-tree-id3 . -1) 1011 (1008 . 1011) (#(" " 0 1 (fontified t)) . -1008) (undo-tree-id4 . -1) 1009 (1008 . 1009)) nil (25342 55391 897493 200000) 0 nil])
([nil nil ((#("        raise ValueError(\"Unimplemented\")
" 0 8 (fontified t) 8 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 24 (face font-lock-type-face fontified t) 24 25 (fontified t) 25 40 (face font-lock-string-face fontified t) 40 42 (fontified t)) . 2648) (undo-tree-id7 . -8) (undo-tree-id8 . -8) (undo-tree-id9 . -8) (undo-tree-id10 . -8) (undo-tree-id11 . -8) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -1) (undo-tree-id17 . -4) (undo-tree-id18 . -5) (undo-tree-id19 . -42) (undo-tree-id20 . -42) (undo-tree-id21 . -42) (undo-tree-id22 . -42) (undo-tree-id23 . -42) (undo-tree-id24 . -42) (undo-tree-id25 . -42) (undo-tree-id26 . -42) (undo-tree-id27 . -8) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8) (undo-tree-id36 . -8) (undo-tree-id37 . -8) (undo-tree-id38 . -8) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -8) 2656 (t 25342 55391 961526 300000)) nil (25342 55450 278899 500000) 0 nil])
([nil nil ((2719 . 2732) (2698 . 2719) (2683 . 2698) (#("_log_l" 0 6 (fontified t)) . -2683) (undo-tree-id6 . -6) 2689 (2677 . 2689) (2656 . 2677) (2648 . 2656) (2648 . 2649)) nil (25342 55450 278861 100000) 0 nil])
([nil nil ((2773 . 2777) (2764 . 2773) (2757 . 2764) (2742 . 2757) (#("_log_li" 0 7 (face font-lock-function-name-face fontified t)) . -2742) (undo-tree-id44 . -7) 2749 (2738 . 2749) (#("    " 0 4 (fontified t)) . -2738) (undo-tree-id45 . -4) 2742 (2734 . 2742) (#("        " 0 8 (fontified nil)) . 2733) (undo-tree-id46 . -8) (undo-tree-id47 . -8) (2741 . 2742) (2732 . 2741) (t 25342 55450 214948 700000) 2731) nil (25342 55468 43509 500000) 0 nil])
([nil nil ((2648 . 2689) 2659 (t 25342 55464 229228 400000)) nil (25342 55538 120850 0) 0 nil] [nil nil ((#("    " 0 4 (fontified t)) . -2823) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -1) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) 2827 (2822 . 2827) (t 25342 55464 229228 400000) 2817) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 2822) (undo-tree-id87 . -5) (undo-tree-id88 . -5) (undo-tree-id89 . -5) (undo-tree-id90 . -5) (undo-tree-id91 . -5) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -5) (undo-tree-id97 . -5) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (undo-tree-id102 . -5) (undo-tree-id103 . -5) (undo-tree-id104 . -5) (undo-tree-id105 . -5) (undo-tree-id106 . -5) (undo-tree-id107 . -5) (undo-tree-id108 . -5) (undo-tree-id109 . -5) (undo-tree-id110 . -5) (undo-tree-id111 . -5) (undo-tree-id112 . -5) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -5) (undo-tree-id116 . -5) (undo-tree-id117 . -5) (undo-tree-id118 . -5) (undo-tree-id119 . -5) (undo-tree-id120 . -5) (undo-tree-id121 . -5) (undo-tree-id122 . -5) (undo-tree-id123 . -5) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -2) (2823 . 2827)) (25342 55468 13367 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2696 . 2697) (#("
" 0 1 (fontified nil)) . -2957) (2688 . 2958) 2656) nil (25342 55538 120848 0) 0 nil])
nil
([nil nil ((2649 . 2662) (#("h" 0 1 (fontified t)) . -2649) (undo-tree-id128 . -1) (#("t" 0 1 (fontified t)) . -2650) (undo-tree-id129 . -1) 2651 (2647 . 2651) (2645 . 2647)) nil (25342 55538 120845 0) 0 nil])
([nil nil ((#("self.x" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . 2815) (2821 . 2822) (#("self.x" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . 2781) (2787 . 2788) (#("self.x" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . 2731) (2737 . 2738) (#("self.x" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . 2726) (2732 . 2733)) nil (25342 55538 120828 500000) 0 nil])
([nil nil ((#("self.y" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . 2895) (2901 . 2902) (#("self.y" 0 4 (face font-lock-keyword-face fontified t) 4 6 (fontified t)) . 2786) (2792 . 2793)) nil (25342 55538 120819 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3065 . 3066) (3062 . 3154) (t 25342 55538 50155 0)) nil (25343 51866 780387 600000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -3132) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (3124 . 3132) (#("    " 0 4 (fontified nil)) . -3097) (3089 . 3097) (#("    " 0 3 (fontified nil) 3 4 (fontified nil rear-nonsticky t)) . -3070) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (3062 . 3070) 3120) nil (25343 51866 780386 300000) 0 nil])
([nil nil ((#("        pass
" 0 8 (fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t)) . 3166) (undo-tree-id32 . -4) (undo-tree-id33 . 13) 3170) nil (25343 51866 780381 300000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3166) (undo-tree-id31 . -8) 3174 (3166 . 3174) (3166 . 3167)) nil (25343 51866 780379 100000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3064) (undo-tree-id29 . -1) (#(" " 0 1 (fontified t)) . -3065) (undo-tree-id30 . -1) 3066 (3059 . 3066)) nil (25343 51866 780366 300000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3172) (undo-tree-id28 . -8) 3180 (3171 . 3180) 3171) nil (25343 51866 780364 300000) 0 nil])
([nil nil ((3064 . 3072)) nil (25343 51866 780362 800000) 0 nil])
([nil nil ((3314 . 3318) (3301 . 3314) (3297 . 3301) (#("o" 0 1 (fontified t face font-lock-string-face)) . -3297) (undo-tree-id11 . -1) 3298 (3280 . 3298) (#("l" 0 1 (fontified t)) . -3280) (undo-tree-id12 . -1) 3281 (3280 . 3281) (3271 . 3280) (3267 . 3271) (3254 . 3267) (3250 . 3254) (3234 . 3250) (3225 . 3234) (3221 . 3225) (3208 . 3221) (#("
" 0 1 (fontified t)) . -3208) (undo-tree-id13 . -1) (#("
" 0 1 (fontified t)) . -3209) (undo-tree-id14 . -1) 3210 (#("    " 0 4 (fontified t)) . -3210) (undo-tree-id15 . -4) 3214 (#("    " 0 4 (fontified t)) . -3214) (undo-tree-id16 . -4) 3218 (#("    " 0 4 (fontified t)) . -3218) (undo-tree-id17 . -4) 3222 (#("e" 0 1 (fontified t)) . -3222) (undo-tree-id18 . -1) (#("l" 0 1 (fontified t)) . -3223) (undo-tree-id19 . -1) (#("i" 0 1 (fontified t)) . -3224) (undo-tree-id20 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -3225) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t)) . -3226) (undo-tree-id22 . -1) 3227 (3222 . 3227) (3210 . 3222) (#("            " 0 12 (fontified nil)) . 3209) (undo-tree-id23 . -12) (3208 . 3222) (3196 . 3208) (3188 . 3196) (3180 . 3188) (#("        " 0 8 (fontified nil)) . 3179) (undo-tree-id24 . -8) (3178 . 3188) (#("
" 0 1 (fontified t)) . -3178) (undo-tree-id25 . -1) 3179 (#("    " 0 4 (fontified t)) . -3179) (undo-tree-id26 . -4) 3183 (#("    " 0 4 (fontified t)) . -3183) (undo-tree-id27 . -4) 3187 (3179 . 3187) (3179 . 3180)) nil (25343 51866 780359 300000) 0 nil])
([nil nil ((#("        elif method == \"ord\":
" 0 8 (fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 19 (fontified t) 19 23 (fontified t) 23 28 (fontified t face font-lock-string-face) 28 30 (fontified t)) . 3272) (undo-tree-id0 . -1) (undo-tree-id1 . -4) (undo-tree-id2 . -5) (undo-tree-id3 . -30) (undo-tree-id4 . -30) (undo-tree-id5 . -30) (undo-tree-id6 . -30) (undo-tree-id7 . -30) (undo-tree-id8 . -30) (undo-tree-id9 . -30) (undo-tree-id10 . -30)) nil (25343 51866 780344 0) 0 nil])
([nil nil ((3280 . 3285) (3272 . 3280) (3272 . 3273)) nil (25343 52646 634685 400000) 0 nil])
([nil nil ((#("            pass
" 0 12 (fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t)) . 3209) (undo-tree-id142 . -16) (undo-tree-id143 . 17) (undo-tree-id144 . -15) (undo-tree-id145 . -15) 3224 (t 25343 51867 675436 0)) nil (25343 52720 991868 400000) 0 nil] [nil nil ((#("            " 0 12 (fontified t)) . -3209) (undo-tree-id41 . -12) (undo-tree-id42 . -12) (undo-tree-id43 . -1) (undo-tree-id44 . -4) (undo-tree-id45 . -5) (undo-tree-id46 . -8) (undo-tree-id47 . -9) (undo-tree-id48 . -12) (undo-tree-id49 . -12) (undo-tree-id50 . -12) (undo-tree-id51 . -12) (undo-tree-id52 . -12) (undo-tree-id53 . -12) (undo-tree-id54 . -12) (undo-tree-id55 . -12) (undo-tree-id56 . -12) (undo-tree-id57 . -12) (undo-tree-id58 . -12) (undo-tree-id59 . -12) (undo-tree-id60 . -12) (undo-tree-id61 . -12) (undo-tree-id62 . -12) (undo-tree-id63 . -12) (undo-tree-id64 . -12) (undo-tree-id65 . -12) (undo-tree-id66 . -12) (undo-tree-id67 . -12) (undo-tree-id68 . -12) (undo-tree-id69 . -12) (undo-tree-id70 . -12) (undo-tree-id71 . -12) (undo-tree-id72 . -12) (undo-tree-id73 . -12) (undo-tree-id74 . -12) (undo-tree-id75 . -12) (undo-tree-id76 . -12) (undo-tree-id77 . -12) (undo-tree-id78 . -12) (undo-tree-id79 . -12) (undo-tree-id80 . -12) (undo-tree-id81 . -12) 3221 (3209 . 3221) (3209 . 3210) 3224 (t 25343 51867 675436 0)) ((#("
" 0 1 (fontified nil)) . 3209) (undo-tree-id82 . 1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("            " 0 12 (fontified nil)) . 3209) (undo-tree-id88 . -12) (undo-tree-id89 . -12) (undo-tree-id90 . -12) (undo-tree-id91 . -12) (undo-tree-id92 . -12) (undo-tree-id93 . -12) (undo-tree-id94 . -12) (undo-tree-id95 . -12) (undo-tree-id96 . -12) (undo-tree-id97 . -12) (undo-tree-id98 . -12) (undo-tree-id99 . -12) (undo-tree-id100 . -12) (undo-tree-id101 . -12) (undo-tree-id102 . -12) (undo-tree-id103 . -12) (undo-tree-id104 . -12) (undo-tree-id105 . -12) (undo-tree-id106 . -12) (undo-tree-id107 . -12) (undo-tree-id108 . -12) (undo-tree-id109 . -12) (undo-tree-id110 . -12) (undo-tree-id111 . -12) (undo-tree-id112 . -12) (undo-tree-id113 . -12) (undo-tree-id114 . -12) (undo-tree-id115 . -12) (undo-tree-id116 . -12) (undo-tree-id117 . -12) (undo-tree-id118 . -12) (undo-tree-id119 . -12) (undo-tree-id120 . -12) (undo-tree-id121 . -12) (undo-tree-id122 . -12) (undo-tree-id123 . -1) (undo-tree-id124 . -4) (undo-tree-id125 . -5) (undo-tree-id126 . -8) (undo-tree-id127 . -9) (3209 . 3221)) (25343 52646 630397 300000) 0 nil])
([nil nil ((3327 . 3348) (#("r" 0 1 (fontified t)) . -3327) (undo-tree-id129 . -1) (#("e" 0 1 (fontified t)) . -3328) (undo-tree-id130 . -1) (#("t" 0 1 (fontified t)) . -3329) (undo-tree-id131 . -1) (#("u" 0 1 (fontified t)) . -3330) (undo-tree-id132 . -1) (#("r" 0 1 (fontified t)) . -3331) (undo-tree-id133 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -3332) (undo-tree-id134 . -1) 3333 (#(" " 0 1 (fontified t)) . -3333) (undo-tree-id135 . -1) 3334 (3327 . 3334) (#("c" 0 1 (fontified t)) . -3327) (undo-tree-id136 . -1) (#("l" 0 1 (fontified t)) . -3328) (undo-tree-id137 . -1) (#("i" 0 1 (fontified t)) . -3329) (undo-tree-id138 . -1) 3330 (3327 . 3330) (3314 . 3327) (3303 . 3314) (3282 . 3303) (3269 . 3282) (3268 . 3269) (3261 . 3268) (3246 . 3261) (#("spfill_di" 0 9 (fontified t)) . -3246) (undo-tree-id139 . -9) 3255 (3246 . 3255) (3233 . 3246) (3226 . 3233) (#("t" 0 1 (fontified t)) . -3226) (undo-tree-id140 . -1) (#("h" 0 1 (fontified t)) . -3227) (undo-tree-id141 . -1) 3228 (3221 . 3228) (3209 . 3221) (3209 . 3210) 3224) nil (25343 52720 991863 600000) 0 nil])
nil
([nil nil ((3444 . 3445) (#("k" 0 1 (fontified t)) . -3444) (undo-tree-id128 . -1) 3445 (3434 . 3445) (3425 . 3434) 3424) nil (25343 52720 991954 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3446) (t 25343 52722 997246 700000)) nil (25343 52724 803916 800000) 0 nil] [nil nil ((#("


" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -3446) 3444) ((3446 . 3449)) (25343 52720 991838 700000) 0 nil])
([nil nil ((#("            clik = nlsig2 - jacob
" 0 12 (fontified t) 12 16 (fontified t face font-lock-variable-name-face) 16 33 (fontified t) 33 34 (fontified t)) . 3315) (undo-tree-id202 . -34) (undo-tree-id203 . -34) (undo-tree-id204 . -34) (undo-tree-id205 . -34) (undo-tree-id206 . -34) (undo-tree-id207 . -34) (undo-tree-id208 . -34) (undo-tree-id209 . -34) (undo-tree-id210 . -34) (undo-tree-id211 . -34) (undo-tree-id212 . -34) (undo-tree-id213 . -34) (undo-tree-id214 . -34) (undo-tree-id215 . -34) (undo-tree-id216 . -34) (undo-tree-id217 . -34) (undo-tree-id218 . -34) (undo-tree-id219 . -34) (undo-tree-id220 . -34) (undo-tree-id221 . -34) (undo-tree-id222 . -34) (undo-tree-id223 . -34) (undo-tree-id224 . -34) (undo-tree-id225 . -34) (undo-tree-id226 . -34) (undo-tree-id227 . -34) (undo-tree-id228 . -34) (undo-tree-id229 . -34) (undo-tree-id230 . -34) (undo-tree-id231 . -34) (undo-tree-id232 . -34) (undo-tree-id233 . -34) (undo-tree-id234 . -34) (undo-tree-id235 . -34) (undo-tree-id236 . -34) (undo-tree-id237 . -34) (undo-tree-id238 . -34) (undo-tree-id239 . -34) (undo-tree-id240 . -34) (undo-tree-id241 . -34) (undo-tree-id242 . -34) (undo-tree-id243 . -34) (undo-tree-id244 . -34) (undo-tree-id245 . -34) (undo-tree-id246 . -34) (undo-tree-id247 . -34) (undo-tree-id248 . -34) (undo-tree-id249 . -34) (undo-tree-id250 . -34) (undo-tree-id251 . -34) (undo-tree-id252 . -34) (undo-tree-id253 . -34) (undo-tree-id254 . -34) (undo-tree-id255 . -34) (undo-tree-id256 . -34) (undo-tree-id257 . -34) (undo-tree-id258 . -34) (undo-tree-id259 . -34) (undo-tree-id260 . -34) (undo-tree-id261 . -34) (undo-tree-id262 . -34) (undo-tree-id263 . -34) (undo-tree-id264 . -34) (undo-tree-id265 . -34) (undo-tree-id266 . -34) (undo-tree-id267 . -34) (undo-tree-id268 . -34) (undo-tree-id269 . -34) (undo-tree-id270 . -34) (undo-tree-id271 . -34) (undo-tree-id272 . -34) (undo-tree-id273 . -34) (undo-tree-id274 . -34) (undo-tree-id275 . -34) (undo-tree-id276 . -34) (undo-tree-id277 . -34) (undo-tree-id278 . -34) (undo-tree-id279 . -34) (undo-tree-id280 . -34) (undo-tree-id281 . -34) (undo-tree-id282 . -34) (undo-tree-id283 . -34) (undo-tree-id284 . -34) (undo-tree-id285 . -34) (undo-tree-id286 . -34) (undo-tree-id287 . -34) (undo-tree-id288 . -34) (undo-tree-id289 . -34) (undo-tree-id290 . -34) (undo-tree-id291 . -34) (undo-tree-id292 . -34) (undo-tree-id293 . -34) (undo-tree-id294 . -34) (undo-tree-id295 . -34) (undo-tree-id296 . -34) (undo-tree-id297 . -34) (undo-tree-id298 . -34) (undo-tree-id299 . -34) (undo-tree-id300 . -34) (undo-tree-id301 . -34) (undo-tree-id302 . -34) (undo-tree-id303 . -34) (undo-tree-id304 . -34) (undo-tree-id305 . -34) (undo-tree-id306 . -34) (undo-tree-id307 . -34) (undo-tree-id308 . -34) (undo-tree-id309 . -34) (undo-tree-id310 . -34) (undo-tree-id311 . -34) (undo-tree-id312 . -34) (undo-tree-id313 . -34) (undo-tree-id314 . -34) (undo-tree-id315 . -34) (undo-tree-id316 . -34) (undo-tree-id317 . -34) (undo-tree-id318 . -1) (undo-tree-id319 . -4) (undo-tree-id320 . -5) (undo-tree-id321 . -8) (undo-tree-id322 . -9) (undo-tree-id323 . -33) (undo-tree-id324 . -33) (t 25343 52725 684552 300000)) nil (25343 52743 480973 400000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3403 . 3404) (3392 . 3426)) nil (25343 52743 480890 300000) 0 nil])
([nil nil ((#("            " 0 11 (fontified nil) 11 12 (rear-nonsticky t fontified nil)) . -3400) (undo-tree-id146 . -12) (undo-tree-id147 . -12) (undo-tree-id148 . -12) (undo-tree-id149 . -12) (undo-tree-id150 . -12) (undo-tree-id151 . -12) (undo-tree-id152 . -12) (undo-tree-id153 . -12) (undo-tree-id154 . -12) (undo-tree-id155 . -12) (undo-tree-id156 . -12) (undo-tree-id157 . -12) (undo-tree-id158 . -12) (undo-tree-id159 . -12) (undo-tree-id160 . -12) (undo-tree-id161 . -12) (undo-tree-id162 . -12) (undo-tree-id163 . -12) (undo-tree-id164 . -12) (undo-tree-id165 . -12) (undo-tree-id166 . -12) (undo-tree-id167 . -12) (undo-tree-id168 . -12) (undo-tree-id169 . -12) (undo-tree-id170 . -12) (undo-tree-id171 . -12) (undo-tree-id172 . -12) (undo-tree-id173 . -12) (undo-tree-id174 . -12) (undo-tree-id175 . -12) (undo-tree-id176 . -12) (undo-tree-id177 . -12) (undo-tree-id178 . -12) (undo-tree-id179 . -12) (undo-tree-id180 . -12) (undo-tree-id181 . -12) (undo-tree-id182 . -12) (undo-tree-id183 . -12) (undo-tree-id184 . -12) (undo-tree-id185 . -12) (undo-tree-id186 . -12) (undo-tree-id187 . -12) (undo-tree-id188 . -12) (undo-tree-id189 . -12) (undo-tree-id190 . -12) (undo-tree-id191 . -12) (undo-tree-id192 . -12) (undo-tree-id193 . -12) (undo-tree-id194 . -12) (undo-tree-id195 . -12) (undo-tree-id196 . -12) (undo-tree-id197 . -1) (undo-tree-id198 . -4) (undo-tree-id199 . -5) (undo-tree-id200 . -8) (undo-tree-id201 . -9) (3392 . 3400) 3404) nil (25343 52743 480885 700000) 0 nil])
([nil nil ((#("            pass
" 0 12 (fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t)) . 3344) (undo-tree-id348 . -12) (undo-tree-id349 . -12) 3356 (t 25343 52744 360171 300000)) nil (25343 52829 652289 500000) 0 nil])
([nil nil ((3472 . 3481) (#("W" 0 1 (fontified t)) . -3472) (undo-tree-id325 . -1) (#("." 0 1 (fontified t)) . -3473) (undo-tree-id326 . -1) (#("n" 0 1 (fontified t)) . -3474) (undo-tree-id327 . -1) 3475 (3469 . 3475) (#("f" 0 1 (fontified t)) . -3469) (undo-tree-id328 . -1) (#("y" 0 1 (fontified t)) . -3470) (undo-tree-id329 . -1) 3471 (3460 . 3471) (#("I" 0 1 (fontified t)) . -3460) (undo-tree-id330 . -1) (#(" " 0 1 (fontified t)) . -3461) (undo-tree-id331 . -1) 3462 (3456 . 3462) (#("e" 0 1 (fontified t)) . -3456) (undo-tree-id332 . -1) (#("r" 0 1 (fontified t)) . -3457) (undo-tree-id333 . -1) (#(" " 0 1 (fontified t)) . -3458) (undo-tree-id334 . -1) 3459 (3458 . 3459) (3456 . 3458) (#("    " 0 4 (fontified t)) . -3456) (undo-tree-id335 . -4) 3460 (3443 . 3460) (3440 . 3443) (#("," 0 1 (fontified t)) . -3440) (undo-tree-id336 . -1) 3441 (3428 . 3441) (3411 . 3428) (3407 . 3411) (3386 . 3407) (#(":" 0 1 (fontified t)) . -3386) (undo-tree-id337 . -1) (#("
" 0 1 (fontified t)) . -3387) (undo-tree-id338 . -1) 3388 (#("    " 0 4 (fontified t)) . -3388) (undo-tree-id339 . -4) 3392 (#("    " 0 4 (fontified t)) . -3392) (undo-tree-id340 . -4) 3396 (#("    " 0 4 (fontified t)) . -3396) (undo-tree-id341 . -4) 3400 (#("    " 0 4 (fontified t)) . -3400) (undo-tree-id342 . -4) 3404 (#("r" 0 1 (fontified t)) . -3404) (undo-tree-id343 . -1) (#("h" 0 1 (fontified t)) . -3405) (undo-tree-id344 . -1) (#("o" 0 1 (fontified t)) . -3406) (undo-tree-id345 . -1) 3407 (3404 . 3407) (3387 . 3404) (3377 . 3387) (#("d" 0 1 (fontified t)) . -3377) (undo-tree-id346 . -1) 3378 (3369 . 3378) (3359 . 3369) (#("isin" 0 4 (fontified t)) . -3359) (undo-tree-id347 . -4) 3363 (3356 . 3363) (3344 . 3356) (3344 . 3345) 3356) nil (25343 52829 652284 100000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t)) . 3232)) nil (25343 52829 652258 300000) 0 nil])
([nil nil ((3232 . 3238)) nil (25343 52829 652257 300000) 0 nil])
([nil nil ((237 . 246) (216 . 237) (216 . 217) 243) nil (25343 52829 652254 100000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3610) (undo-tree-id370 . -1) 3611 (#("    " 0 4 (fontified t)) . -3611) (undo-tree-id371 . -4) 3615 (#("    " 0 4 (fontified t)) . -3615) (undo-tree-id372 . -4) 3619 (#("    " 0 4 (fontified t)) . -3619) (undo-tree-id373 . -4) 3623 (#("c" 0 1 (fontified t)) . -3623) (undo-tree-id374 . -1) (#("l" 0 1 (fontified t)) . -3624) (undo-tree-id375 . -1) 3625 (3623 . 3625) (3610 . 3623) (3605 . 3610) (#(")" 0 1 (fontified t)) . -3605) (undo-tree-id376 . -1) 3606 (3591 . 3606) (3584 . 3591) (3563 . 3584) (3550 . 3563) (3541 . 3550) (#("," 0 1 (fontified t)) . -3541) (undo-tree-id377 . -1) 3542 (3530 . 3542) (#("s" 0 1 (fontified t)) . -3530) (undo-tree-id378 . -1) (#("p" 0 1 (fontified t)) . -3531) (undo-tree-id379 . -1) (#("l" 0 1 (fontified t)) . -3532) (undo-tree-id380 . -1) 3533 (3530 . 3533) (3517 . 3530) (t 25343 52830 529529 0) 3516) nil (25343 52908 64269 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 246 . 247) (#("
" 0 1 (fontified nil)) . -283) (246 . 284) 231) nil (25343 52908 64257 600000) 0 nil])
([nil nil ((#("from scipy.sparse.linalg import splu
" 0 4 (fontified t face font-lock-keyword-face) 4 25 (fontified t) 25 31 (fontified t face font-lock-keyword-face) 31 36 (fontified t) 36 37 (fontified t)) . 247) (undo-tree-id350 . -36) (undo-tree-id351 . -36) (undo-tree-id352 . -17) (undo-tree-id353 . -17) (undo-tree-id354 . -17) (undo-tree-id355 . -17) (undo-tree-id356 . -17) (undo-tree-id357 . -17) (undo-tree-id358 . -17) (undo-tree-id359 . -17) (undo-tree-id360 . -17) (undo-tree-id361 . -17) (undo-tree-id362 . -17) (undo-tree-id363 . -17) (undo-tree-id364 . -17) (undo-tree-id365 . -17) (undo-tree-id366 . -17) (undo-tree-id367 . -17) (undo-tree-id368 . -17) (undo-tree-id369 . -17) 264) nil (25343 52908 64253 300000) 0 nil])
([nil nil ((3539 . 3545) (#("a" 0 1 (fontified t)) . -3539) (undo-tree-id381 . -1) (#("i" 0 1 (fontified t)) . -3540) (undo-tree-id382 . -1) 3541 (3535 . 3541) (t 25343 52908 932747 400000)) nil (25343 52915 694533 0) 0 nil])
([nil nil ((#("            pass
" 0 12 (fontified t) 12 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t)) . 3635) (undo-tree-id766 . -17) (undo-tree-id767 . -15) (undo-tree-id768 . -15) (undo-tree-id769 . -17) (undo-tree-id770 . -1) (undo-tree-id771 . -4) (undo-tree-id772 . -5) (undo-tree-id773 . -8) (undo-tree-id774 . -9) (undo-tree-id775 . -15) (undo-tree-id776 . -15) (undo-tree-id777 . -16) (undo-tree-id778 . -15) (undo-tree-id779 . -15) (undo-tree-id780 . -15) (undo-tree-id781 . -15) (undo-tree-id782 . -15) (undo-tree-id783 . -15) (undo-tree-id784 . -15) (undo-tree-id785 . -15) (undo-tree-id786 . -15) (undo-tree-id787 . -15) 3650 (t 25343 52916 569424 800000)) nil (25343 52952 68810 100000) 0 nil])
([nil nil ((3790 . 3807) (#("
" 0 1 (fontified t)) . -3790) (undo-tree-id466 . -1) (undo-tree-id467 . 1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (#("
" 0 1 (fontified t)) . -3791) (undo-tree-id547 . -1) (undo-tree-id548 . 1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) 3792 (#("    " 0 4 (fontified t)) . -3792) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -1) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) 3796 (#("    " 0 4 (fontified t)) . -3796) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -4) (undo-tree-id663 . -4) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -1) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) (undo-tree-id671 . -4) (undo-tree-id672 . -4) (undo-tree-id673 . -4) (undo-tree-id674 . -4) (undo-tree-id675 . -4) (undo-tree-id676 . -4) (undo-tree-id677 . -4) (undo-tree-id678 . -4) 3800 (#("    " 0 4 (fontified t)) . -3800) (undo-tree-id679 . -4) (undo-tree-id680 . -4) (undo-tree-id681 . -4) (undo-tree-id682 . -4) (undo-tree-id683 . -4) (undo-tree-id684 . -4) (undo-tree-id685 . -4) (undo-tree-id686 . -4) (undo-tree-id687 . -4) (undo-tree-id688 . -4) (undo-tree-id689 . -4) (undo-tree-id690 . -1) (undo-tree-id691 . -4) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -4) (undo-tree-id695 . -4) (undo-tree-id696 . -4) (undo-tree-id697 . -4) (undo-tree-id698 . -4) (undo-tree-id699 . -4) (undo-tree-id700 . -4) (undo-tree-id701 . -4) (undo-tree-id702 . -4) 3804 (#("    " 0 4 (fontified t)) . -3804) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -1) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -4) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) 3808 (3792 . 3808) (#("            " 0 12 (fontified nil)) . 3791) (undo-tree-id717 . -12) (undo-tree-id718 . -12) (undo-tree-id719 . -12) (undo-tree-id720 . -12) (undo-tree-id721 . -12) (undo-tree-id722 . -12) (undo-tree-id723 . -12) (undo-tree-id724 . -12) (undo-tree-id725 . -12) (undo-tree-id726 . -12) (undo-tree-id727 . -12) (undo-tree-id728 . -12) (undo-tree-id729 . -12) (undo-tree-id730 . -12) (undo-tree-id731 . -12) (undo-tree-id732 . -12) (undo-tree-id733 . -12) (undo-tree-id734 . -12) (undo-tree-id735 . -12) (undo-tree-id736 . -12) (undo-tree-id737 . -12) (undo-tree-id738 . -1) (undo-tree-id739 . -4) (undo-tree-id740 . -5) (undo-tree-id741 . -8) (undo-tree-id742 . -9) (3803 . 3804) (#("    " 0 4 (fontified t)) . -3803) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -1) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) 3807 (3790 . 3807) (3775 . 3790) (#("b" 0 1 (fontified t)) . -3775) (undo-tree-id757 . -1) (#("o" 0 1 (fontified t)) . -3776) (undo-tree-id758 . -1) (#(" " 0 1 (fontified t)) . -3777) (undo-tree-id759 . -1) (#("=" 0 1 (fontified t)) . -3778) (undo-tree-id760 . -1) 3779 (3772 . 3779) (3755 . 3772) (3751 . 3755) (3730 . 3751) (#("n" 0 1 (fontified t)) . -3730) (undo-tree-id761 . -1) (#("i" 0 1 (fontified t)) . -3731) (undo-tree-id762 . -1) 3732 (3725 . 3732) (3712 . 3725) (3693 . 3712) (#("a" 0 1 (fontified t)) . -3693) (undo-tree-id763 . -1) 3694 (3680 . 3694) (3667 . 3680) (3652 . 3667) (#(" " 0 1 (fontified t)) . -3652) (undo-tree-id764 . -1) (#("s" 0 1 (fontified t)) . -3653) (undo-tree-id765 . -1) 3654 (3647 . 3654) (3635 . 3647) (3635 . 3636) 3650) nil (25343 52952 68772 700000) 0 nil])
([nil nil ((#("                
" 0 16 (fontified t) 16 17 (fontified t)) . 3791) (undo-tree-id402 . 1) (undo-tree-id403 . -15) (undo-tree-id404 . 1) (undo-tree-id405 . 1) (undo-tree-id406 . -17) (undo-tree-id407 . -17) (undo-tree-id408 . -17) (undo-tree-id409 . -17) (undo-tree-id410 . -17) (undo-tree-id411 . -17) (undo-tree-id412 . -17) (undo-tree-id413 . -17) (undo-tree-id414 . -17) (undo-tree-id415 . -1) (undo-tree-id416 . -4) (undo-tree-id417 . -5) (undo-tree-id418 . -8) (undo-tree-id419 . -9) (undo-tree-id420 . -12) (undo-tree-id421 . -13) (undo-tree-id422 . -16) (undo-tree-id423 . -16) (undo-tree-id424 . -16) (undo-tree-id425 . -16) (undo-tree-id426 . -16) (undo-tree-id427 . -16) (undo-tree-id428 . -16) (undo-tree-id429 . -16) (undo-tree-id430 . -16) (undo-tree-id431 . -15) (undo-tree-id432 . -15) (undo-tree-id433 . -15) (undo-tree-id434 . -15) (undo-tree-id435 . -15) (undo-tree-id436 . -15) (undo-tree-id437 . -15) (undo-tree-id438 . -15) (undo-tree-id439 . -15) (undo-tree-id440 . -15) (undo-tree-id441 . -15) (undo-tree-id442 . -15) (undo-tree-id443 . -15) (undo-tree-id444 . -15) (undo-tree-id445 . -15) (undo-tree-id446 . -15) (undo-tree-id447 . -15) (undo-tree-id448 . -15) (undo-tree-id449 . -15) (undo-tree-id450 . -15) (undo-tree-id451 . -15) (undo-tree-id452 . -15) (undo-tree-id453 . -15) (undo-tree-id454 . -15) (undo-tree-id455 . -15) (undo-tree-id456 . -15) (undo-tree-id457 . -15) (undo-tree-id458 . -15) (undo-tree-id459 . -15) (undo-tree-id460 . -15) (undo-tree-id461 . -15) (undo-tree-id462 . -15) (undo-tree-id463 . -15) (undo-tree-id464 . -15) (undo-tree-id465 . -15) 3806) nil (25343 52952 68585 400000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -3791) (undo-tree-id383 . -16) (undo-tree-id384 . -1) (undo-tree-id385 . -4) (undo-tree-id386 . -5) (undo-tree-id387 . -8) (undo-tree-id388 . -9) (undo-tree-id389 . -12) (undo-tree-id390 . -13) (undo-tree-id391 . -16) (undo-tree-id392 . -16) (undo-tree-id393 . -16) (undo-tree-id394 . -16) (undo-tree-id395 . -16) (undo-tree-id396 . -16) (undo-tree-id397 . -16) (undo-tree-id398 . -16) (undo-tree-id399 . -16) (undo-tree-id400 . -16) (undo-tree-id401 . -16) 3807 (3791 . 3807) (3791 . 3792) 3806) nil (25343 52952 68513 200000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -3103) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (#(" " 0 1 (fontified t)) . -3104) (undo-tree-id790 . -1) (#("e" 0 1 (fontified t)) . -3105) (undo-tree-id791 . -1) (#("v" 0 1 (fontified t)) . -3106) (undo-tree-id792 . -1) (#("a" 0 1 (fontified t)) . -3107) (undo-tree-id793 . -1) 3108 (3103 . 3108) (t 25343 52952 919592 900000)) nil (25343 52966 908863 700000) 0 nil])
([nil nil ((3097 . 3104)) nil (25343 52966 908847 300000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -3017) (undo-tree-id894 . -1) (#("v" 0 1 (fontified t)) . -3018) (undo-tree-id895 . -1) (#("a" 0 1 (fontified t)) . -3019) (undo-tree-id896 . -1) 3020 (3017 . 3020) (3004 . 3017) (#(" " 0 1 (fontified t)) . -3004) (undo-tree-id897 . -1) 3005 (3003 . 3005) (#(" " 0 1 (fontified t)) . -3003) (undo-tree-id898 . -1) (#("a" 0 1 (fontified t)) . -3004) (undo-tree-id899 . -1) (#("d" 0 1 (fontified t)) . -3005) (undo-tree-id900 . -1) 3006 (2985 . 3006) (2977 . 2985) (#("        " 0 8 (fontified nil)) . 2976) (undo-tree-id901 . -8) (undo-tree-id902 . -8) (2984 . 2985) (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -2984) (undo-tree-id903 . -1) 2985 (2984 . 2985) (2976 . 2984) (2976 . 2977) (t 25343 52967 786029 500000)) nil (25343 53042 770823 900000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3025 . 3026) (#("
" 0 1 (fontified nil)) . -3238) (3017 . 3239) 3016) nil (25343 53042 770815 100000) 0 nil])
([nil nil ((#("        if method == \"ord\":
" 0 8 (fontified t) 8 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 17 (fontified t) 17 21 (fontified t) 21 26 (fontified t face font-lock-string-face) 26 28 (fontified t)) . 2977) (undo-tree-id865 . -12) (undo-tree-id866 . -12) (undo-tree-id867 . -1) (undo-tree-id868 . -4) (undo-tree-id869 . -5) (undo-tree-id870 . -8) (undo-tree-id871 . -8) (undo-tree-id872 . -8) (undo-tree-id873 . -8) (undo-tree-id874 . -27) (undo-tree-id875 . -27) (undo-tree-id876 . -28) (undo-tree-id877 . -8) (undo-tree-id878 . -8) (undo-tree-id879 . -8) (undo-tree-id880 . -8) (undo-tree-id881 . -8) (undo-tree-id882 . -8) (undo-tree-id883 . -8) (undo-tree-id884 . -8) (undo-tree-id885 . -8) (undo-tree-id886 . -8) (undo-tree-id887 . -8) (undo-tree-id888 . -8) (undo-tree-id889 . -8) (undo-tree-id890 . -8) (undo-tree-id891 . -8) (undo-tree-id892 . -8) (undo-tree-id893 . -8) 2985) nil (25343 53042 770813 0) 0 nil])
([nil nil ((#("            
" 0 12 (fontified t) 12 13 (fontified t)) . 2977) (undo-tree-id798 . -13) (undo-tree-id799 . -12) (undo-tree-id800 . -8) (undo-tree-id801 . -12) (undo-tree-id802 . -12) (undo-tree-id803 . -12) (undo-tree-id804 . -12) (undo-tree-id805 . -12) (undo-tree-id806 . -12) (undo-tree-id807 . -12) (undo-tree-id808 . -12) (undo-tree-id809 . -12) (undo-tree-id810 . -12) (undo-tree-id811 . -12) (undo-tree-id812 . -12) (undo-tree-id813 . -11) (undo-tree-id814 . -11) (undo-tree-id815 . -11) (undo-tree-id816 . -11) (undo-tree-id817 . -11) (undo-tree-id818 . -11) (undo-tree-id819 . -11) (undo-tree-id820 . -11) (undo-tree-id821 . -11) (undo-tree-id822 . -11) (undo-tree-id823 . -11) (undo-tree-id824 . -11) (undo-tree-id825 . -11) (undo-tree-id826 . -11) (undo-tree-id827 . -11) (undo-tree-id828 . -11) (undo-tree-id829 . -11) (undo-tree-id830 . -11) (undo-tree-id831 . -13) (undo-tree-id832 . -8) (undo-tree-id833 . -8) (undo-tree-id834 . -8) (undo-tree-id835 . -8) (undo-tree-id836 . -8) (undo-tree-id837 . -8) (undo-tree-id838 . -8) (undo-tree-id839 . -13) (undo-tree-id840 . -1) (undo-tree-id841 . -4) (undo-tree-id842 . -5) (undo-tree-id843 . -8) (undo-tree-id844 . -9) (undo-tree-id845 . -12) (undo-tree-id846 . -8) (undo-tree-id847 . -8) (undo-tree-id848 . -8) (undo-tree-id849 . -8) (undo-tree-id850 . -8) (undo-tree-id851 . -8) (undo-tree-id852 . -8) (undo-tree-id853 . -8) (undo-tree-id854 . -8) (undo-tree-id855 . -8) (undo-tree-id856 . -8) (undo-tree-id857 . -8) (undo-tree-id858 . -8) (undo-tree-id859 . -8) (undo-tree-id860 . -8) (undo-tree-id861 . -8) (undo-tree-id862 . -8) (undo-tree-id863 . -8) (undo-tree-id864 . -8) 2985) nil (25343 53042 770795 0) 0 nil])
([nil nil ((3275 . 3292) (#("w" 0 1 (fontified t)) . -3275) (undo-tree-id794 . -1) 3276 (3267 . 3276) (#("a" 0 1 (fontified t)) . -3267) (undo-tree-id795 . -1) 3268 (3264 . 3268) (#("g" 0 1 (fontified t)) . -3264) (undo-tree-id796 . -1) 3265 (3249 . 3265) (3236 . 3249) (#("    " 0 4 (fontified nil)) . -3231) (3236 . 3240) (3235 . 3236) (3222 . 3235) (3218 . 3222) (#("n" 0 1 (fontified t)) . -3218) (undo-tree-id797 . -1) 3219 (3210 . 3219) (3197 . 3210) 3196) nil (25343 53042 770755 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . -3293) (undo-tree-id904 . -12) (undo-tree-id905 . -12) (undo-tree-id906 . -1) (undo-tree-id907 . -4) (undo-tree-id908 . -5) (undo-tree-id909 . -8) (undo-tree-id910 . -9) (undo-tree-id911 . -12) (undo-tree-id912 . -12) (undo-tree-id913 . -12) (undo-tree-id914 . -12) (undo-tree-id915 . -12) (undo-tree-id916 . -12) (undo-tree-id917 . -12) (undo-tree-id918 . -12) (undo-tree-id919 . -12) (undo-tree-id920 . -12) (undo-tree-id921 . -12) (undo-tree-id922 . -12) (undo-tree-id923 . -12) (undo-tree-id924 . -12) (undo-tree-id925 . -12) (undo-tree-id926 . -12) (undo-tree-id927 . -12) (undo-tree-id928 . -12) (undo-tree-id929 . -12) (undo-tree-id930 . -12) (undo-tree-id931 . -12) (undo-tree-id932 . -12) (undo-tree-id933 . -12) (undo-tree-id934 . -12) (undo-tree-id935 . -12) (undo-tree-id936 . -12) (undo-tree-id937 . -12) (undo-tree-id938 . -12) (undo-tree-id939 . -12) (undo-tree-id940 . -12) (undo-tree-id941 . -12) (undo-tree-id942 . -12) (undo-tree-id943 . -12) (undo-tree-id944 . -12) 3305 (3292 . 3305) (t 25343 53043 643588 100000) 3291) nil (25343 53045 500058 600000) 0 nil])
([nil nil ((3360 . 3363) (#("0" 0 1 (fontified t)) . -3360) (undo-tree-id997 . -1) 3361 (3354 . 3361) (t 25343 53046 359328 800000)) nil (25343 53141 460277 600000) 0 nil])
([nil nil ((3396 . 3397) (#("a" 0 1 (fontified t)) . 3396) (3366 . 3396) (#(" " 0 1 (fontified nil)) . 3366) (3365 . 3366)) nil (25343 53141 460275 900000) 0 nil])
([nil nil ((3404 . 3409) (3402 . 3404)) nil (25343 53141 460274 800000) 0 nil])
([nil nil ((3466 . 3469) (#("0" 0 1 (fontified t)) . -3466) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (#("1" 0 1 (fontified t)) . -3467) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) 3468 (3461 . 3468)) nil (25343 53141 460272 700000) 0 nil])
([nil nil ((3403 . 3423) (#("v" 0 1 (fontified t)) . -3403) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (#("a" 0 1 (fontified t)) . -3404) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (#("l" 0 1 (fontified t face font-lock-builtin-face)) . -3405) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (#("s" 0 1 (fontified t)) . -3406) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (#("," 0 1 (fontified t)) . -3407) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (#(" " 0 1 (fontified t)) . -3408) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (#("e" 0 1 (fontified t)) . -3409) (undo-tree-id958 . -1) (#("0" 0 1 (fontified t)) . -3410) (undo-tree-id959 . -1) (#("," 0 1 (fontified t)) . -3411) (undo-tree-id960 . -1) (#(" " 0 1 (fontified t)) . -3412) (undo-tree-id961 . -1) 3413 (3409 . 3413)) nil (25343 53141 460254 500000) 0 nil])
([nil nil ((3444 . 3474) (#(" " 0 1 (fontified nil)) . 3444) (undo-tree-id945 . -1) (3443 . 3444) (3425 . 3443)) nil (25343 53141 460241 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2984 . 2985) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -3023) (2976 . 3024) (t 25343 53142 327529 300000)) nil (25343 53157 157277 0) 0 nil])
([nil nil ((#("k" 0 1 (fontified t)) . -3569) (undo-tree-id1113 . -1) 3570 (3569 . 3570) (3560 . 3569) (3557 . 3560) (#("," 0 1 (fontified t)) . -3557) (undo-tree-id1114 . -1) 3558 (3554 . 3558) (#("." 0 1 (fontified t)) . -3554) (undo-tree-id1115 . -1) 3555 (3552 . 3555) (#("d" 0 1 (fontified t)) . -3552) (undo-tree-id1116 . -1) (#("." 0 1 (fontified t)) . -3553) (undo-tree-id1117 . -1) 3554 (3549 . 3554) (#("s" 0 1 (fontified t)) . -3549) (undo-tree-id1118 . -1) 3550 (3543 . 3550) (3535 . 3543) (#("        " 0 8 (fontified nil)) . 3534) (undo-tree-id1119 . -8) (undo-tree-id1120 . -8) (3542 . 3543) (3533 . 3542) (t 25343 53158 39248 100000) 3499) nil (25343 53344 668068 600000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3542)) nil (25343 53344 668061 200000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-variable-name-face)) . 3542)) nil (25343 53344 668060 600000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-variable-name-face)) . 3542)) nil (25343 53344 668060 100000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-variable-name-face)) . 3542)) nil (25343 53344 668059 500000) 0 nil])
([nil nil ((3548 . 3559) (#("indi" 0 4 (fontified t)) . -3548) (undo-tree-id1112 . -4) 3552 (3542 . 3552)) nil (25343 53344 668058 800000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -3630) (undo-tree-id1100 . -1) (#("e" 0 1 (fontified t)) . -3631) (undo-tree-id1101 . -1) 3632 (3630 . 3632) (3621 . 3630) (3616 . 3621) (3605 . 3616) (#("in" 0 2 (fontified t face font-lock-keyword-face)) . -3605) (undo-tree-id1102 . -2) 3607 (3605 . 3607) (#("I" 0 1 (fontified t)) . -3605) (undo-tree-id1103 . -1) 3606 (3593 . 3606) (#(" " 0 1 (fontified t)) . -3593) (undo-tree-id1104 . -1) 3594 (3587 . 3594) (#("d" 0 1 (fontified t)) . -3587) (undo-tree-id1105 . -1) (#("i" 0 1 (fontified t)) . -3588) (undo-tree-id1106 . -1) (#("r" 0 1 (fontified t face font-lock-builtin-face)) . -3589) (undo-tree-id1107 . -1) (#("_" 0 1 (fontified t)) . -3590) (undo-tree-id1108 . -1) (#("d" 0 1 (fontified t)) . -3591) (undo-tree-id1109 . -1) (#("i" 0 1 (fontified t)) . -3592) (undo-tree-id1110 . -1) 3593 (3582 . 3593) (#("b" 0 1 (fontified t)) . -3582) (undo-tree-id1111 . -1) 3583 (3582 . 3583)) nil (25343 53344 668055 700000) 0 nil])
([nil nil ((#("self.coef_ " 0 4 (fontified t face font-lock-keyword-face) 4 11 (fontified t)) . 3582)) nil (25343 53344 668046 200000) 0 nil])
([nil nil ((3582 . 3590)) nil (25343 53344 668045 600000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3619) (undo-tree-id1031 . -8) (undo-tree-id1032 . -8) (undo-tree-id1033 . -1) (undo-tree-id1034 . -4) (undo-tree-id1035 . -5) (undo-tree-id1036 . -7) (undo-tree-id1037 . -7) (undo-tree-id1038 . -7) (undo-tree-id1039 . -7) (undo-tree-id1040 . -7) (undo-tree-id1041 . -7) (undo-tree-id1042 . -7) (undo-tree-id1043 . -7) (undo-tree-id1044 . -7) (undo-tree-id1045 . -7) (undo-tree-id1046 . -1) (undo-tree-id1047 . -4) (undo-tree-id1048 . -5) (undo-tree-id1049 . -1) (undo-tree-id1050 . -4) (undo-tree-id1051 . -5) (undo-tree-id1052 . -1) (undo-tree-id1053 . -4) (undo-tree-id1054 . -5) (undo-tree-id1055 . -1) (undo-tree-id1056 . -4) (undo-tree-id1057 . -5) (undo-tree-id1058 . -1) (undo-tree-id1059 . -4) (undo-tree-id1060 . -5) (undo-tree-id1061 . -1) (undo-tree-id1062 . -4) (undo-tree-id1063 . -5) (undo-tree-id1064 . -1) (undo-tree-id1065 . -4) (undo-tree-id1066 . -5) (undo-tree-id1067 . -1) (undo-tree-id1068 . -4) (undo-tree-id1069 . -5) (undo-tree-id1070 . -1) (undo-tree-id1071 . -4) (undo-tree-id1072 . -5) (undo-tree-id1073 . -7) (undo-tree-id1074 . -7) (undo-tree-id1075 . -7) (undo-tree-id1076 . -7) (undo-tree-id1077 . -7) (undo-tree-id1078 . -7) (undo-tree-id1079 . -7) (undo-tree-id1080 . -7) (undo-tree-id1081 . -7) (undo-tree-id1082 . -7) (undo-tree-id1083 . -7) (undo-tree-id1084 . -7) (undo-tree-id1085 . -7) (undo-tree-id1086 . -7) (undo-tree-id1087 . -8) (undo-tree-id1088 . -8) (undo-tree-id1089 . -8) (undo-tree-id1090 . -8) (undo-tree-id1091 . -8) (undo-tree-id1092 . -8) (undo-tree-id1093 . -8) (undo-tree-id1094 . -8) (undo-tree-id1095 . -8) (undo-tree-id1096 . -8) (undo-tree-id1097 . -8) (undo-tree-id1098 . -8) (undo-tree-id1099 . -8) 3627) nil (25343 53344 668042 700000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3629 . 3630) (nil fontified nil 3619 . 3630) (3619 . 3630)) nil (25343 53344 667996 300000) 0 nil])
([nil nil ((3619 . 3627)) nil (25343 53344 667995 0) 0 nil])
([nil nil ((3675 . 3687) (3665 . 3675) (#("inte" 0 4 (fontified t)) . -3665) (undo-tree-id998 . -4) (undo-tree-id999 . -2) (undo-tree-id1000 . -2) (undo-tree-id1001 . -2) (undo-tree-id1002 . -2) (undo-tree-id1003 . -3) (undo-tree-id1004 . -3) (undo-tree-id1005 . -3) (undo-tree-id1006 . -3) (undo-tree-id1007 . -3) (undo-tree-id1008 . -3) (undo-tree-id1009 . -3) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) (undo-tree-id1015 . -4) (undo-tree-id1016 . -4) (undo-tree-id1017 . -4) (undo-tree-id1018 . -4) (undo-tree-id1019 . -4) (undo-tree-id1020 . -4) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) (undo-tree-id1025 . -4) 3669 (3664 . 3669) (#("-" 0 1 (fontified t)) . -3664) (undo-tree-id1026 . -1) 3665 (3660 . 3665) (3651 . 3660) (3641 . 3651) (3637 . 3641) (#(" " 0 1 (fontified t rear-nonsticky t)) . -3637) (undo-tree-id1027 . -1) (#(" " 0 1 (fontified t)) . -3638) (undo-tree-id1028 . -1) (#("=" 0 1 (fontified t)) . -3639) (undo-tree-id1029 . -1) (#(" " 0 1 (fontified t)) . -3640) (undo-tree-id1030 . -1) 3641 (3638 . 3641)) nil (25343 53344 667990 200000) 0 nil])
([nil nil ((3649 . 3650) (3636 . 3649) (#("fit" 0 3 (fontified t)) . -3636) (undo-tree-id1131 . -3) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -2) (undo-tree-id1147 . -2) (undo-tree-id1148 . -2) (undo-tree-id1149 . -2) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -2) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -2) (undo-tree-id1158 . -2) (undo-tree-id1159 . -2) (undo-tree-id1160 . -3) (undo-tree-id1161 . -3) (undo-tree-id1162 . -3) (undo-tree-id1163 . -3) (undo-tree-id1164 . -3) (undo-tree-id1165 . -3) (undo-tree-id1166 . -3) (undo-tree-id1167 . -3) (undo-tree-id1168 . -3) (undo-tree-id1169 . -3) (undo-tree-id1170 . -3) (undo-tree-id1171 . -3) (undo-tree-id1172 . -3) (undo-tree-id1173 . -3) (undo-tree-id1174 . -3) (undo-tree-id1175 . -3) (undo-tree-id1176 . -3) (undo-tree-id1177 . -3) (undo-tree-id1178 . -3) (undo-tree-id1179 . -3) (undo-tree-id1180 . -3) (undo-tree-id1181 . -3) (undo-tree-id1182 . -3) (undo-tree-id1183 . -3) (undo-tree-id1184 . -3) (undo-tree-id1185 . -3) (undo-tree-id1186 . -3) (undo-tree-id1187 . -3) (undo-tree-id1188 . -3) (undo-tree-id1189 . -3) (undo-tree-id1190 . -3) (undo-tree-id1191 . -3) (undo-tree-id1192 . -3) (undo-tree-id1193 . -3) (undo-tree-id1194 . -3) (undo-tree-id1195 . -3) 3639 (3628 . 3639) (3620 . 3628) (#("        " 0 8 (fontified nil)) . 3619) (undo-tree-id1196 . -8) (undo-tree-id1197 . -8) (3627 . 3628) (3619 . 3627) (3619 . 3620) 3650 (t 25343 53345 536629 800000)) nil (25343 53364 591542 700000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -3700) (undo-tree-id1123 . -8) (undo-tree-id1124 . -8) (undo-tree-id1125 . -1) (undo-tree-id1126 . -4) (undo-tree-id1127 . -5) (3688 . 3700) (#("        " 0 8 (fontified nil)) . -3663) (undo-tree-id1128 . -1) (undo-tree-id1129 . -4) (undo-tree-id1130 . -5) (3651 . 3663) 3713) nil (25343 53364 591508 400000) 0 nil])
([nil nil ((3764 . 3773) (3759 . 3764) (#("coef" 0 4 (fontified t)) . -3759) (undo-tree-id1121 . -4) 3763 (3754 . 3763) (3741 . 3754) (3736 . 3741) (#("    " 0 4 (fontified t)) . -3736) (undo-tree-id1122 . -4) 3740 (3727 . 3740) 3717) nil (25343 53364 591502 100000) 0 nil])
([nil nil ((3773 . 3774)) nil (25343 53364 591489 200000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2544 . 2545) (2537 . 2692) (t 25343 53365 471973 700000)) nil (25343 53429 197251 900000) 0 nil])
([nil nil ((2603 . 2605)) nil (25343 53429 197251 0) 0 nil])
([nil nil ((#("        self.intercept_ = params[0]
" 0 8 (fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 36 (fontified t)) . 2694) (undo-tree-id1209 . -34) 2728) nil (25343 53429 197250 300000) 0 nil])
([nil nil ((#("        self.coef_ = params[1:-1]
" 0 8 (fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 18 (fontified t) 18 33 (fontified t) 33 34 (fontified t)) . 2694) (undo-tree-id1208 . -32) 2726) nil (25343 53429 197248 900000) 0 nil])
([nil nil ((2693 . 2697)) nil (25343 53429 197247 400000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -2697) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) 2698 (2697 . 2698)) nil (25343 53429 197245 600000) 0 nil])
([nil nil ((2697 . 2698)) nil (25343 53429 197228 300000) 0 nil])
([nil nil ((2643 . 2644) (t 25343 53430 72921 100000)) nil (25343 53535 781953 800000) 0 nil])
([nil nil ((2733 . 2734)) nil (25343 53535 781952 400000) 0 nil])
([nil nil ((2511 . 2512)) nil (25343 53535 781948 800000) 0 nil])
([nil nil ((3819 . 3820) (t 25343 53536 660228 900000)) nil (25343 53549 442875 800000) 0 nil])
([nil nil ((5835 . 5840) (5834 . 5835) (5829 . 5834) (5813 . 5829) (#(" " 0 1 (fontified t)) . -5813) (undo-tree-id1212 . -1) 5814 (5804 . 5814) (#(" " 0 1 (fontified t)) . -5804) (undo-tree-id1213 . -1) (#("=" 0 1 (fontified t)) . -5805) (undo-tree-id1214 . -1) (#(" " 0 1 (fontified t)) . -5806) (undo-tree-id1215 . -1) (#("s" 0 1 (fontified t)) . -5807) (undo-tree-id1216 . -1) (#("p" 0 1 (fontified t)) . -5808) (undo-tree-id1217 . -1) (#("r" 0 1 (fontified t)) . -5809) (undo-tree-id1218 . -1) (#("e" 0 1 (fontified t)) . -5810) (undo-tree-id1219 . -1) (#("g" 0 1 (fontified t)) . -5811) (undo-tree-id1220 . -1) 5812 (5799 . 5812) (5794 . 5799) (t 25343 53550 318637 700000) 5794) nil (25343 53638 694369 500000) 0 nil])
([nil nil ((#("
    print(" 0 1 (fontified t) 1 5 (fontified t) 5 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t)) . 5829) (undo-tree-id1211 . -10) 5839) nil (25343 53638 694337 100000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5833 . 5834) (#("
" 0 1 (fontified nil)) . -5909) (5829 . 5910) 5804) nil (25343 53638 694333 600000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5913 . 5914) (#("
" 0 1 (fontified nil)) . -5982) (5909 . 5983) 5885) nil (25343 53638 694332 200000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5910) (undo-tree-id1210 . -4) 5914 (5910 . 5914) (5910 . 5911) 5914) nil (25343 53638 694306 700000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t)) . 5934) (5935 . 5936) 5934 (#("G" 0 1 (fontified t)) . 5933) (5934 . 5935) 5933) nil (25343 53638 694246 500000) 0 nil])
([nil nil ((5983 . 5984)) nil (25343 53638 694241 700000) 0 nil])
([nil nil ((#("full" 0 4 (fontified t face font-lock-string-face)) . 5823) (t 25343 53639 531592 300000)) nil (25343 53687 129758 800000) 0 nil])
([nil nil ((5823 . 5825)) nil (25343 53687 129757 500000) 0 nil])
([nil nil ((5953 . 5966) (#("m" 0 1 (fontified t)) . -5953) (undo-tree-id1221 . -1) (#("," 0 1 (fontified t)) . -5954) (undo-tree-id1222 . -1) 5955 (5954 . 5955) (#(" " 0 1 (fontified t)) . -5954) (undo-tree-id1223 . -1) 5955 (5953 . 5955)) nil (25343 53687 129753 800000) 0 nil])
([nil nil ((5820 . 5827) (5799 . 5820) (5795 . 5799) (5795 . 5796) (t 25343 53687 976458 700000)) nil (25343 53717 566400 400000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-string-face)) . 5856) (t 25343 53718 404671 0)) nil (25343 53760 203549 100000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-string-face)) . 5856)) nil (25343 53760 203547 700000) 0 nil])
([nil nil ((5856 . 5859)) nil (25343 53760 203544 400000) 0 nil])
([nil nil ((3086 . 3091) (#("m" 0 1 (fontified t)) . -3086) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (#("l" 0 1 (fontified t)) . -3087) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) 3088 (3080 . 3088) (3072 . 3080) (3072 . 3073) 3080 (t 25343 53761 41651 400000)) nil (25343 53782 791604 200000) 0 nil])
([nil nil ((#("        self.method = method
" 0 8 (fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 29 (fontified t)) . 676) (undo-tree-id1259 . -18) 694 (t 25343 53783 630356 400000)) nil (25343 53823 129926 600000) 0 nil])
([nil nil ((#(", method=\"gm\"):" 0 9 (fontified t) 9 13 (fontified t face font-lock-string-face) 13 15 (fontified t)) . 598)) nil (25343 53823 129917 600000) 0 nil])
([nil nil ((598 . 600)) nil (25343 53823 129916 900000) 0 nil])
([nil nil ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 1401)) nil (25343 53823 129916 200000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1401)) nil (25343 53823 129915 500000) 0 nil])
([nil nil ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 1485)) nil (25343 53823 129914 100000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1485)) nil (25343 53823 129910 300000) 0 nil])
([nil nil ((540 . 541) (519 . 540) (#("l" 0 1 (fontified t)) . -519) (undo-tree-id1271 . -1) (#(" " 0 1 (fontified t)) . -520) (undo-tree-id1272 . -1) (#("." 0 1 (fontified t)) . -521) (undo-tree-id1273 . -1) 522 (511 . 522) (#(" " 0 1 (fontified t)) . -511) (undo-tree-id1274 . -1) 512 (507 . 512) (507 . 508) (t 25343 53823 984413 100000)) nil (25343 53862 765862 600000) 0 nil])
([nil nil ((545 . 547) (#("l" 0 1 (fontified t)) . -545) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) 546 (541 . 546)) nil (25343 53862 765855 700000) 0 nil])
([nil nil ((#("weights" 0 7 (fontified t)) . 2795) (t 25343 53863 622958 500000)) nil (25343 53870 893071 800000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 2795)) nil (25343 53870 893070 100000) 0 nil])
([nil nil ((2807 . 2812)) nil (25343 53870 893066 200000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 2861) (t 25343 53871 741825 700000)) nil (25343 53889 230265 700000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 2861)) nil (25343 53889 230264 300000) 0 nil])
([nil nil ((2861 . 2870)) nil (25343 53889 230260 600000) 0 nil])
([nil nil ((3024 . 3025) (#("x" 0 1 (fontified t)) . 3024) (t 25343 53890 82157 400000)) nil (25343 53902 339817 700000) 0 nil])
([nil nil ((3057 . 3058) (#("x" 0 1 (fontified t)) . 3057)) nil (25343 53902 339813 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 547 . 548) (#("
" 0 1 (fontified nil)) . -590) (547 . 591) 507 (t 25343 53903 180507 100000)) nil (25343 53928 17089 700000) 0 nil])
([nil nil ((4002 . 4007) (#("." 0 1 (fontified t)) . -4002) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) 4003 (3998 . 4003) (#(" " 0 1 (fontified t)) . -3998) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (#("y" 0 1 (fontified t)) . -3999) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (#("." 0 1 (fontified t)) . -4000) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (#("s" 0 1 (fontified t)) . -4001) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) 4002 (3995 . 4002) (3987 . 3995) (3987 . 3988) (t 25343 53928 894768 800000)) nil (25343 53952 780052 0) 0 nil])
([nil nil ((#("ord" 0 3 (fontified t face font-lock-string-face)) . 5933) (t 25343 53953 633911 300000)) nil (25343 53963 453328 700000) 0 nil])
([nil nil ((5933 . 5937)) nil (25343 53963 453324 800000) 0 nil])
([nil nil ((4171 . 4181) (t 25343 53964 297872 300000)) nil (25343 53997 862388 400000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -329) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (#("w" 0 1 (fontified t)) . -330) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (#("
" 0 1 (fontified t)) . -331) (undo-tree-id1480 . -1) (undo-tree-id1481 . 1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) 332 (331 . 332) (330 . 331) (#("s" 0 1 (fontified t)) . -330) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) 331 (329 . 331) (314 . 329) (#("spfill_d" 0 8 (fontified t)) . -314) (undo-tree-id1503 . -8) (undo-tree-id1504 . -8) (undo-tree-id1505 . -8) (undo-tree-id1506 . -8) (undo-tree-id1507 . -8) (undo-tree-id1508 . -8) (undo-tree-id1509 . -8) (undo-tree-id1510 . -8) (undo-tree-id1511 . -8) (undo-tree-id1512 . -8) 322 (316 . 322) (312 . 316) (t 25343 53998 708808 500000)) nil (25343 54031 588787 200000) 0 nil])
([nil nil ((#("    model = spreg.Lag(w=weights)
" 0 4 (fontified t) 4 9 (fontified t face font-lock-variable-name-face) 9 32 (fontified t) 32 33 (fontified t)) . 5899) (undo-tree-id1513 . -31) (undo-tree-id1514 . -18) (undo-tree-id1515 . -18) (undo-tree-id1516 . -33) (undo-tree-id1517 . -1) (undo-tree-id1518 . -33) (undo-tree-id1519 . -33) (undo-tree-id1520 . -33) (undo-tree-id1521 . -33) (undo-tree-id1522 . -33) (undo-tree-id1523 . -33) (undo-tree-id1524 . -33) (undo-tree-id1525 . -33) (undo-tree-id1526 . -33) (undo-tree-id1527 . -33) (undo-tree-id1528 . -33) (undo-tree-id1529 . -33) (undo-tree-id1530 . -33) (undo-tree-id1531 . -33) (undo-tree-id1532 . -33) (undo-tree-id1533 . -33) (undo-tree-id1534 . -33) (undo-tree-id1535 . -33) (undo-tree-id1536 . -33) (undo-tree-id1537 . -33) (undo-tree-id1538 . -33) (t 25343 54032 445455 200000)) nil (25343 54059 297989 800000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6105 . 6106) (#("
" 0 1 (fontified nil)) . -6303) (6101 . 6304) (t 25343 54060 153139 600000)) nil (25343 54089 403355 600000) 0 nil])
([nil nil ((#("lu" 0 2 (fontified t face font-lock-string-face)) . 6069) (undo-tree-id1587 . -2)) nil (25343 54089 403354 500000) 0 nil])
([nil nil ((6071 . 6073) (6069 . 6071)) nil (25343 54089 403353 300000) 0 nil])
([nil nil ((#("full" 0 4 (fontified t face font-lock-string-face)) . 6132)) nil (25343 54089 403352 600000) 0 nil])
([nil nil ((6132 . 6134)) nil (25343 54089 403352 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil)) . -6503) (6303 . 6504) 6302) nil (25343 54089 403351 400000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -6304) (undo-tree-id1586 . -4) 6308 (6304 . 6308) (6304 . 6305) 6308) nil (25343 54089 403350 200000) 0 nil])
([nil nil ((#("lu" 0 2 (fontified t face font-lock-string-face)) . 6333)) nil (25343 54089 403348 300000) 0 nil])
([nil nil ((6333 . 6336)) nil (25343 54089 403347 700000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -6474) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -6475) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) 6476 (6474 . 6476)) nil (25343 54089 403345 100000) 0 nil])
([nil nil ((#("lu" 0 2 (fontified t face font-lock-string-face)) . 6474) (undo-tree-id1539 . 2)) nil (25343 54089 403316 100000) 0 nil])
([nil nil ((6474 . 6477)) nil (25343 54089 403306 600000) 0 nil])
([nil current ((6506 . 6507)) nil (25343 54089 403302 900000) 0 nil])
nil
